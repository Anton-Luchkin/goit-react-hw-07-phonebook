{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Notification/Notification.module.css","components/Title/Title.module.css","components/ContactList/Contact/Contact.module.css","components/Filter/Filter.module.css","components/App.module.css","components/Wrapper/wrapper.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducers.js","redux/store.js","redux/phonebook/phonebook-operations.js","components/Wrapper/Wrapper.js","components/Title/Title.js","components/Notification/Notification.js","redux/phonebook/phonebook-selectors.js","components/ContactForm/ContactForm.js","components/ContactList/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","state","filter","id","combineReducers","store","configureStore","reducer","contacts","contactsReduser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","dispatch","axios","get","then","data","catch","error","name","number","post","delete","Wrapper","children","className","styles","wrapper","Title","CSSTransition","in","appear","timeout","classNames","unmountOnExit","title","Notification","showNotification","notificationBox","notificationText","getItems","getFilter","getVisibleContacts","createSelector","allContacts","normalizedFilter","toLowerCase","includes","initialState","ContactForm","handleChange","e","target","value","setState","hendleSubmit","preventDefault","props","contact","hideNotification","notificationTimer","setTimeout","clearTimeout","onSubmitForm","reset","this","onSubmit","contact_form","lable","type","onChange","input","btn","Component","connect","phonebookSelectors","phonebookOperations","Contact","onDeleteContact","contactText","delContactBtn","onClick","contactTitle","TransitionGroup","component","contact_list","map","key","event","phonebookActions","App","fetchContacts","container","contactsListContainer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6286b730.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_form\":\"ContactForm_contact_form__1dWDT\",\"lable\":\"ContactForm_lable__11ejD\",\"input\":\"ContactForm_input__89_C4\",\"btn\":\"ContactForm_btn__3ozdg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactTitle\":\"ContactList_contactTitle__2XnhB\",\"contact_list\":\"ContactList_contact_list__2b-oG\",\"contact\":\"ContactList_contact__7txxN\",\"enter\":\"ContactList_enter__KL1za\",\"enterActive\":\"ContactList_enterActive__aMy3U\",\"exit\":\"ContactList_exit__2NRRF\",\"exitActive\":\"ContactList_exitActive__gCJIz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Notification_enter__GX5Sz\",\"enterActive\":\"Notification_enterActive__VO2b3\",\"exit\":\"Notification_exit__QXK23\",\"exitActive\":\"Notification_exitActive__1Wea5\",\"notificationBox\":\"Notification_notificationBox__109lD\",\"notificationText\":\"Notification_notificationText__3rBYB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Title_appear___ATXQ\",\"appearActive\":\"Title_appearActive__3O2-K\",\"title\":\"Title_title__1DQEV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactText\":\"Contact_contactText__2zzci\",\"delContactBtn\":\"Contact_delContactBtn__2IJ5h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__wZldt\",\"input\":\"Filter_input__3ucav\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2t0_D\",\"contactsListContainer\":\"App_contactsListContainer__1gRsc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"wrapper_wrapper__Hd5Ql\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction('contacts/fetchRequest');\nexport const fetchContactsSuccess = createAction('contacts/fetchSuccess');\nexport const fetchContactsError = createAction('contacts/fetchError');\n\nexport const addContactRequest = createAction('contacts/addRequest');\nexport const addContactSuccess = createAction('contacts/addSuccess');\nexport const addContactError = createAction('contacts/addError');\n\nexport const deleteContactRequest = createAction('contacts/deleteRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteSuccess');\nexport const deleteContactError = createAction('contacts/deleteError');\n\nexport const changeFilter = createAction('contacts/chengeFilter');\n\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n   fetchContactsSuccess,\n   addContactSuccess,\n   deleteContactSuccess,\n   changeFilter\n} from './phonebook-actions';\n\nconst items = createReducer([], {\n   [fetchContactsSuccess]: (_, { payload }) => payload,\n   [addContactSuccess]: (state, { payload }) => [payload, ...state],\n   [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n   [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n   items,\n   filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contactsReduser from './phonebook/phonebook-reducers';\nimport {\n   FLUSH,\n   REHYDRATE,\n   PAUSE,\n   PERSIST,\n   PURGE,\n   REGISTER,\n} from 'redux-persist';\n\n\nconst store = configureStore({\n   reducer: {\n      contacts: contactsReduser,\n   },\n   middleware: getDefaultMiddleware({\n      serializableCheck: {\n         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n   }),\n});\n\n\nexport default store;\n","import {\r\n   fetchContactsRequest,\r\n   fetchContactsSuccess,\r\n   fetchContactsError,\r\n   addContactRequest,\r\n   addContactSuccess,\r\n   addContactError,\r\n   deleteContactRequest,\r\n   deleteContactSuccess,\r\n   deleteContactError\r\n} from './phonebook-actions';\r\nimport axios from 'axios';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n   dispatch(fetchContactsRequest());\r\n\r\n   axios\r\n      .get('http://localhost:2000/contacts')\r\n      .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n      .catch(error => dispatch(fetchContactsError(error)));\r\n}\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n   dispatch(addContactRequest());\r\n\r\n   axios\r\n      .post('http://localhost:2000/contacts', { name, number })\r\n      .then(({ data }) => dispatch(addContactSuccess(data)))\r\n      .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n   dispatch(deleteContactRequest());\r\n\r\n   axios\r\n      .delete(`http://localhost:2000/contacts/${id}`)\r\n      .then(() => dispatch(deleteContactSuccess(id)))\r\n      .catch(error => dispatch(deleteContactError(error)));\r\n}\r\n\r\nexport default {\r\n   fetchContacts,\r\n   addContact,\r\n   deleteContact\r\n}","import React from 'react';\n\nimport styles from './wrapper.module.css';\n\nconst Wrapper = ({ children }) => (\n  <div className={styles.wrapper}>{children}</div>\n);\n\nexport default Wrapper;\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport styles from './Title.module.css';\n\nconst Title = () => (\n  <div>\n    <CSSTransition\n      in={true}\n      appear={true}\n      timeout={500}\n      classNames={styles}\n      unmountOnExit\n    >\n      <h2 className={styles.title}>Phonebook</h2>\n    </CSSTransition>\n  </div>\n);\n\nexport default Title;\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport styles from './Notification.module.css';\n\nconst Notification = ({ showNotification }) => (\n  <CSSTransition\n    in={showNotification}\n    timeout={250}\n    classNames={styles}\n    unmountOnExit\n  >\n    <div className={styles.notificationBox}>\n      <span className={styles.notificationText}>Contact already exist!</span>\n    </div>\n  </CSSTransition>\n);\n\nexport default Notification;\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getItems = state => state.contacts.items;\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getVisibleContacts = createSelector([getItems, getFilter], (allContacts, filter) => {\r\n   const normalizedFilter = filter.toLowerCase();\r\n\r\n   return allContacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n   );\r\n});\r\n\r\nexport default {\r\n   getItems,\r\n   getFilter,\r\n   getVisibleContacts\r\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations';\nimport Notification from '../Notification/Notification';\nimport phonebookSelectors from '../../redux/phonebook/phonebook-selectors';\n\nimport styles from './ContactForm.module.css';\n\nconst initialState = {\n   name: '',\n   number: '',\n};\n\nexport class ContactForm extends Component {\n   state = {\n      name: '',\n      number: '',\n   };\n\n   handleChange = e => {\n      const { name, value } = e.target;\n      this.setState({ [name]: value });\n   };\n\n   hendleSubmit = e => {\n      e.preventDefault();\n      const { name } = this.state;\n      const contacts = this.props.contacts;\n\n      for (const contact of contacts) {\n         const hideNotification = () => {\n            this.setState({ showNotification: false });\n         };\n\n         const notificationTimer = () => {\n            setTimeout(hideNotification, 3000);\n         };\n\n         if (name === contact.name) {\n            this.setState({ showNotification: true });\n            notificationTimer();\n            clearTimeout(notificationTimer);\n            return;\n         }\n      }\n\n      this.props.onSubmitForm(this.state);\n      this.reset();\n   };\n\n   reset = () => {\n      this.setState(initialState);\n   };\n\n   render() {\n      const { name, number, showNotification } = this.state;\n\n      return (\n         <form onSubmit={this.hendleSubmit} className={styles.contact_form}>\n            <Notification showNotification={showNotification} />\n\n            <label className={styles.lable}>\n               Name\n          <input\n                  type=\"text\"\n                  value={name}\n                  onChange={this.handleChange}\n                  name=\"name\"\n                  className={styles.input}\n               />\n            </label>\n            <label className={styles.lable}>\n               Number\n          <input\n                  type=\"phone\"\n                  value={number}\n                  onChange={this.handleChange}\n                  name=\"number\"\n                  className={styles.input}\n               />\n            </label>\n            <button type=\"submit\" className={styles.btn}>\n               Add contact\n        </button>\n         </form>\n      );\n   }\n}\n\nconst mapStateToProps = state => ({\n   contacts: phonebookSelectors.getItems(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n   onSubmitForm: contact => dispatch(phonebookOperations.addContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Contact.module.css';\n\nconst Contact = ({ name, number, onDeleteContact }) => {\n  return (\n    <>\n      <p className={styles.contactText}>\n        {name}: <span>{number}</span>\n      </p>\n      <button\n        className={styles.delContactBtn}\n        type=\"button\"\n        onClick={onDeleteContact}\n      >\n        Delete\n      </button>\n    </>\n  );\n};\n\nContact.propTypes = {\n  contactItem: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations';\n\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport Contact from './Contact/Contact';\n\nimport phonebookSelectors from '../../redux/phonebook/phonebook-selectors';\n\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n   return (\n      <div>\n         <h2 className={styles.contactTitle}>Contacts</h2>\n         <TransitionGroup component=\"ul\" className={styles.contact_list}>\n            {contacts.map(({ id, ...props }) => {\n               return (\n                  <CSSTransition key={id} classNames={styles} timeout={250}>\n                     <li className={styles.contact}>\n                        <Contact\n                           onDeleteContact={() => onDeleteContact(id)}\n                           {...props}\n                        />\n                     </li>\n                  </CSSTransition>\n               );\n            })}\n         </TransitionGroup>\n      </div>\n   );\n};\n\nContactList.propTypes = {\n   contact: PropTypes.arrayOf(\n      PropTypes.shape({\n         id: PropTypes.string.isRequired,\n         name: PropTypes.string.isRequired,\n         number: PropTypes.string.isRequired,\n      }),\n   ),\n   onDeleteContact: PropTypes.func.isRequired,\n};\n\n\nconst mapStateToProps = (state) => ({\n   contacts: phonebookSelectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n   onDeleteContact: id => dispatch(phonebookOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as phonebookActions from '../../redux/phonebook/phonebook-actions';\nimport PropTypes from 'prop-types';\nimport phonebookSelectors from '../../redux/phonebook/phonebook-selectors';\n\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n   return (\n      <label className={styles.filter}>\n         Find contact by name\n         <input\n            type=\"text\"\n            value={value}\n            onChange={onChange}\n            className={styles.input}\n         />\n      </label>\n   );\n};\n\nFilter.propTypes = {\n   value: PropTypes.string.isRequired,\n   onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n   value: phonebookSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n   onChange: event =>\n      dispatch(phonebookActions.changeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport phonebookOperations from '../redux/phonebook/phonebook-operations';\nimport Wrapper from './Wrapper/Wrapper';\nimport Title from './Title/Title';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\n\nimport styles from './App.module.css';\n\n\nexport class App extends Component {\n\n   componentDidMount() {\n      this.props.fetchContacts();\n   }\n\n   render() {\n      return (\n         <Wrapper>\n            <div>\n               <Title />\n               <div className={styles.container}>\n                  <ContactForm />\n                  <div className={styles.contactsListContainer}>\n                     <Filter />\n                     <ContactList />\n                  </div>\n               </div>\n            </div>\n         </Wrapper >\n      );\n   }\n}\n\nconst mapDispatchToProps = dispatch => ({\n   fetchContacts: () => dispatch(phonebookOperations.fetchContacts())\n})\n\nexport default connect(null, mapDispatchToProps)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport App from './components/App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './baseStyles.css';\n\nReactDOM.render(\n   <Provider store={store}>\n      <App />\n   </Provider>,\n\n   document.getElementById('root'),\n);\n"],"sourceRoot":""}